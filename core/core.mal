;; Previously in core.rs
; Logic
(def! not (fn* [x]
    (if x nil true)))

(def! and (fn* [a b]
    (if a
        (if b true))))

(def! or (fn* [a b]
    (if a
        true
        (if b true))))

(def! xor (fn* [a b]
    (if a
        (not b)
        (if b true))))

; Arithmetic
(def! + (fn* [a b]
    (- a (- 0 b))))

(def! / (fn* [a b]
    (if (= b 0)
        (raise "Attempting division by 0")
        (/-unsafe a b))))

(def! abs (fn* [a]
    (if (> a 0)
        a
        (- 0 a))))

(def! mod (fn* [a b]
    (- a (* (/ a b) b))))

(def! > (fn* [a b]
    (< b a)))

(def! >= (fn* [a b]
    (not (< a b))))

(def! <= (fn* [a b]
    (>= b a)))

; Other functions in core.rs
(def! list? (fn* [a]
    (= (type a) :list)))

(def! empty? (fn* [l]
    (= (count l) 0)))

(def! assert-eq (fn* [a b]
    (assert (= a b))))

;; File-interaction functions
(def! load-file (fn* [f]
    (eval (read-string (str "(do " (slurp f) "\nnil)")))))

(def! conf-reload (fn* []
    (load-file (str MAL_HOME "/" "config.mal"))))

;; Shorthand
(def! quit (fn* []
    (exit 0)))
