;; Previously in core.rs
; Logic
(def! not (fn* [x]
    (if x nil true)))

(def! and (fn* [a b]
    (if a
        b)))

(def! or (fn* [a b]
    (if a
        a
        b)))

(def! xor (fn* [a b]
    (if a
        (not b)
        b)))

; Arithmetic
(def! abs (fn* [a]
    (if (< a 0)
        (- 0 a)
        a)))

(def! mod (fn* [a b]
    (- a (* (/ a b) b))))

; Other functions in core.rs
(def! list? (fn* [a]
    (= (type a) :list)))

(def! empty? (fn* [l]
    (= (count l) 0)))

(def! assert-eq (fn* [a b]
    (assert (= a b))))

(def! assert-fail (fn* [x]
    (assert (not (ok? (eval x))))))

;; File-interaction functions
(def! load-file (fn* [f]
    (eval (read-string (str "(do " (slurp f) "\nnil)")))))

(def! conf-reload (fn* []
    (load-file (str MAL_HOME "/" "config.mal"))))

;; Shorthand
(def! quit (fn* []
    (exit 0)))
