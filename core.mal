; "not" logic function
(def! not (fn* (a)
    (if a false true)))

; binary "or" logic function
(def! or (fn* (a b)
    (if a true
        (if b
            true
            false))))

; binary "and" logic function
(def! and (fn* (a b)
    (if a
        (if b
            true
            false)
        false)))

; binary "xor" logic function
(def! xor (fn* (a b)
    ; use this strange definition to make it independent from
    ; "or" and "and" definition
    (if a
        (if b false true)
        (if b true false))))